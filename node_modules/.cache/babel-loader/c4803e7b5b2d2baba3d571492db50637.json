{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","map":{"version":3,"names":["window","require","httpResponseHandler","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","getCharset","headers","decode","e","String","fromCharCode","apply","Uint8Array","contentTypeHeader","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","module","exports"],"sources":["C:/office/xampp/htdocs/softtech_it_landing/node_modules/@videojs/xhr/lib/http-handler.js"],"sourcesContent":["\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;"],"mappings":"AAAA;;;;;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,QAA7B,EAAuCC,kBAAvC,EAA2D;EACnF,IAAIA,kBAAkB,KAAK,KAAK,CAAhC,EAAmC;IACjCA,kBAAkB,GAAG,KAArB;EACD;;EAED,OAAO,UAAUC,GAAV,EAAeC,QAAf,EAAyBC,YAAzB,EAAuC;IAC5C;IACA,IAAIF,GAAJ,EAAS;MACPF,QAAQ,CAACE,GAAD,CAAR;MACA;IACD,CAL2C,CAK1C;;;IAGF,IAAIC,QAAQ,CAACE,UAAT,IAAuB,GAAvB,IAA8BF,QAAQ,CAACE,UAAT,IAAuB,GAAzD,EAA8D;MAC5D,IAAIC,KAAK,GAAGF,YAAZ;;MAEA,IAAIH,kBAAJ,EAAwB;QACtB,IAAIJ,MAAM,CAACU,WAAX,EAAwB;UACtB,IAAIC,OAAO,GAAGC,UAAU,CAACN,QAAQ,CAACO,OAAT,IAAoBP,QAAQ,CAACO,OAAT,CAAiB,cAAjB,CAArB,CAAxB;;UAEA,IAAI;YACFJ,KAAK,GAAG,IAAIC,WAAJ,CAAgBC,OAAhB,EAAyBG,MAAzB,CAAgCP,YAAhC,CAAR;UACD,CAFD,CAEE,OAAOQ,CAAP,EAAU,CAAE;QACf,CAND,MAMO;UACLN,KAAK,GAAGO,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIC,UAAJ,CAAeZ,YAAf,CAAhC,CAAR;QACD;MACF;;MAEDJ,QAAQ,CAAC;QACPM,KAAK,EAAEA;MADA,CAAD,CAAR;MAGA;IACD,CA3B2C,CA2B1C;;;IAGFN,QAAQ,CAAC,IAAD,EAAOI,YAAP,CAAR;EACD,CA/BD;AAgCD,CArCD;;AAuCA,SAASK,UAAT,CAAoBQ,iBAApB,EAAuC;EACrC,IAAIA,iBAAiB,KAAK,KAAK,CAA/B,EAAkC;IAChCA,iBAAiB,GAAG,EAApB;EACD;;EAED,OAAOA,iBAAiB,CAACC,WAAlB,GAAgCC,KAAhC,CAAsC,GAAtC,EAA2CC,MAA3C,CAAkD,UAAUZ,OAAV,EAAmBa,WAAnB,EAAgC;IACvF,IAAIC,kBAAkB,GAAGD,WAAW,CAACF,KAAZ,CAAkB,GAAlB,CAAzB;IAAA,IACII,IAAI,GAAGD,kBAAkB,CAAC,CAAD,CAD7B;IAAA,IAEIE,KAAK,GAAGF,kBAAkB,CAAC,CAAD,CAF9B;;IAIA,IAAIC,IAAI,CAACE,IAAL,OAAgB,SAApB,EAA+B;MAC7B,OAAOD,KAAK,CAACC,IAAN,EAAP;IACD;;IAED,OAAOjB,OAAP;EACD,CAVM,EAUJ,OAVI,CAAP;AAWD;;AAEDkB,MAAM,CAACC,OAAP,GAAiB5B,mBAAjB"},"metadata":{},"sourceType":"script"}