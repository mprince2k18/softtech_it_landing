{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };","map":{"version":3,"names":["_inheritsLoose","Stream","_extends","_assertThisInitialized","decodeB64ToUint8Array","LineStream","_Stream","_this","call","buffer","_proto","prototype","push","data","nextNewline","indexOf","trigger","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","length","parseInt","offset","attributeSeparator","key","value","keyvalue","RegExp","parseAttributes","attributes","attrs","split","i","attr","slice","replace","ParseStream","customParsers","tagMappers","line","_this2","event","trim","type","uri","newLines","reduce","acc","mapper","mappedLine","concat","forEach","newLine","text","tagType","duration","parseFloat","title","version","number","playlistType","allowed","test","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","hasOwnProperty","subkey","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","map","mapFn","camelCase","str","a","toUpperCase","camelCaseKeys","Object","keys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","pipe","self","uris","currentUri","currentMap","_key","hasParts","noop","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","on","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","streamInf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","programDateTime","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","part","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","preloadHint","hint","isPart","index","otherHint","renditionReport","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options"],"sources":["C:/office/xampp/htdocs/softtech_it_landing/node_modules/m3u8-parser/dist/m3u8-parser.es.js"],"sourcesContent":["/*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}